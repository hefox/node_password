<?php
// $Id: multicolumncheckboxesradios.module,v 1.10 2009/07/10 18:20:02 mattyoung Exp $
/**
 * @file multicolumncheckboxesradios.module
 * Extends checkboxes/radios form element to have multi-column display option
 * See README.txt for details
 */




function node_password_widget_settings_alter(&$v, $op, $widget) {
  if ($widget['type'] == 'text_textfield' || $widget['widget_type'] == 'text_textfield') {
    switch ($op) {
      case 'form':
        $v['node_password'] = array(
          '#type' => 'checkbox',
          '#title' => t('Treat this field as a password to access the node.'),
          '#default_value' => isset($widget['node_password']) ? $widget['node_password'] : 0,
          '#description' => t('Users will need to have the ignore node passwords permission or provide the password via the url (?node-password=pass.'),
          '#weight' => -8,
        );
        break;
      case 'save':
        $v = array_merge($v, array('node_password'));
        break;
    }
  }
}


function node_password_perm() {
  return array('ignore node password');
}


function node_password_node_grants($account, $op) {
  if (user_access('ignore node password', $account)) {
    $grants['node_password_ignore'] = array(1);
  }
  if ($_GET['node-password']) {
    if (!$_GET['node_password']) $_GET['node_password'] =$_GET['node-password'];
    elseif(is_array($_GET['node_password'])) $_GET['node_password'] = array_merge($_GET['node_password'],$_GET['node-password']);
    else $_GET['node_password'] = array($_GET['node_password'],$_GET['node-password']);   
  }
  if ($_GET['node_password']) {
    
    if (is_array($_GET['node_password'])) {
      foreach ($_GET['node_password'] as $pass) {
         if ($pass) $grants['node_password_password_'. $pass ]= array(1);
      }
    } 
    else $grants['node_password_password_'. $_GET['node_password']] = array(1);
  }
  if ($account->uid) $grants['node_password_author'] = array($account->uid);
  return $grants;
}

function node_password_node_access_records($node) {
  $fields = content_types($node->type);
  $fields = $fields['fields'];
  foreach($fields as $key=>$value){
    if($value['widget']['node_password']) {
      $fieldname = $value['field_name'];
      if ($node->$fieldname) {
        foreach($node->$fieldname as $k => $val) {
          if ($val['value']){
                $grants[] = array(
                  'realm' => 'node_password_password_'.$val['value'],
                  'gid' => 1,
                  'grant_view' => TRUE,
                  'grant_update' => FALSE,
                  'grant_delete' => FALSE,
                  'priority' => 0,
                );
          }
        }

      }
    }
  }
  if ($grants) {
    $grants[] = array(
            'realm' => 'node_password_ignore',
            'gid' => 1,
            'grant_view' => TRUE,
            'grant_update' => FALSE,
            'grant_delete' => FALSE,
            'priority' => 0,
          );
    if ($node->uid) {
      $grants[] = array(
        'realm' => 'node_password_author',
        'gid' => $node->uid,
        'grant_view' => TRUE,
        'grant_update' => TRUE,
        'grant_delete' => TRUE,
        'priority' => 0,
      );
    }
  
  } 
    return $grants;
}

